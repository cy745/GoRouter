package com.wyjson.router.gradle_plugin.utils

object Constants {
    const val GENERATE_ROUTE_DOC = "generateRouteDoc"
    const val ASSEMBLE_ROUTE_MODULE = "assembleRouteModule"
    const val ASSEMBLE_APPLICATION_MODULE = "assembleApplicationModule"
    const val GENERATE_GOROUTER_HELPER = "generateGoRouterHelper"
    const val GENERATE_GOROUTER_HELPER_TODO = "generateGoRouterHelperTODO"

    private const val SEPARATOR = "$$"
    const val PACKAGE_NAME = "com.wyjson.router"

    const val PROJECT = "GoRouter"
    const val PROJECT_OTHER = "${PROJECT}_other"
    const val DOCUMENT_FILE_NAME = "route-doc.json"
    const val _CLASS = ".class"

    // 路由注册生成类名后缀$$Route
    const val ROUTE_MODULE_NAME_SUFFIX = SEPARATOR + "Route"

    // 需要扫描注入的类,所在的包名
    const val ROUTE_MODULE_SCAN_TARGET_INJECT_PACKAGE_NAME = "$PACKAGE_NAME.module.route"

    // 注入到这个类下
    const val ROUTE_MODULE_INJECT_CLASS_NAME = "$PACKAGE_NAME.core.RouteModuleCenter"

    // 注入到这个方法
    const val ROUTE_MODULE_INJECT_METHOD_NAME = "loadByPlugin"

    // 注入内容方法名
    const val ROUTE_MODULE_INJECT_TARGET_METHOD_NAME = "register"


    /**
     * application module
     */

    // application module生成的代理类名后缀$$AP
    const val APPLICATION_MODULE_NAME_SUFFIX = SEPARATOR + "AP"

    // 需要扫描注入的类,所在的包名
    const val APPLICATION_MODULE_SCAN_TARGET_INJECT_PACKAGE_NAME = "$PACKAGE_NAME.module.application"

    // 注入到这个类下
    const val APPLICATION_MODULE_INJECT_CLASS_NAME = "$PACKAGE_NAME.core.ApplicationModuleCenter"

    // 注入到这个方法
    const val APPLICATION_MODULE_INJECT_METHOD_NAME = "loadByPlugin"

    // 注入内容方法名
    const val APPLICATION_MODULE_INJECT_TARGET_METHOD_NAME = "register"


    fun dotToSlash(str: String): String {
        return str.replace(".", "/")
    }

    fun slashToDot(str: String): String {
        return str.replace("/", ".")
    }


    /**
     * GoRouterHelper
     */
    const val WARNING_TIPS = "DO NOT EDIT THIS FILE!!! IT WAS GENERATED BY GOROUTER."
    const val GOROUTER_HELPER_CLASS_NAME = "GoRouterHelper"
    const val FRAGMENT = "androidx.fragment.app.Fragment"
    const val NULLABLE = "androidx.annotation.Nullable"
    const val CONTEXT = "android.content.Context"
    const val CARD = "${PACKAGE_NAME}.model.Card"
    const val I_DEGRADE_SERVICE = "${PACKAGE_NAME}.interfaces.IDegradeService"
    const val I_PRETREATMENT_SERVICE = "${PACKAGE_NAME}.interfaces.IPretreatmentService"
    const val I_JSON_SERVICE = "${PACKAGE_NAME}.interfaces.IJsonService"
    const val FIELD_CARD = "mCard"
    const val HELPER_PACKAGE_NAME = "com.wyjson.gorouter.helper"
    const val HELPER_TAG_PACKAGE_NAME = "com.wyjson.gorouter.helper.tag"
    const val NO_FOUND_HELPER_TAG_PACKAGE_NAME_PLUGIN_TIPS = """
        Not helper tag plugin found in the root project, please in the root project:
        plugins {
            id '${HELPER_TAG_PACKAGE_NAME}'
        }
    """
}